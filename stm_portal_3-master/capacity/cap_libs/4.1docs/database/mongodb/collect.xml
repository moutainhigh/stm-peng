<?xml version="1.0" encoding="UTF-8"?>

<MetricPlugins xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" xsi:noNamespaceSchemaLocation="../../../schema/Collect.xsd">
    <GlobalMetricSetting isEncrypt="FALSE" version="4.1.0">
        <ChangePluginInitParameter pluginid="SshPlugin" parameterId="port" parameterProperty="mustInput" propertyValue="FALSE"/>
        <ChangePluginInitParameter pluginid="SshPlugin" parameterId="username" parameterProperty="mustInput" propertyValue="FALSE"/>
        <ChangePluginInitParameter pluginid="SshPlugin" parameterId="password" parameterProperty="mustInput" propertyValue="FALSE"/>
        <ChangePluginInitParameter pluginid="WmiPlugin" parameterId="username" parameterProperty="mustInput" propertyValue="FALSE"/>
        <ChangePluginInitParameter pluginid="WmiPlugin" parameterId="password" parameterProperty="mustInput" propertyValue="FALSE"/>
        <ChangePluginInitParameter pluginid="TelnetPlugin" parameterId="port" parameterProperty="mustInput" propertyValue="FALSE"/>
        <ChangePluginInitParameter pluginid="TelnetPlugin" parameterId="username" parameterProperty="mustInput" propertyValue="FALSE"/>
        <ChangePluginInitParameter pluginid="TelnetPlugin" parameterId="password" parameterProperty="mustInput" propertyValue="FALSE"/>
        <ChangePluginInitParameter pluginid="TelnetPlugin" parameterId="userprompt" parameterProperty="mustInput" propertyValue="FALSE"/>
        <ChangePluginInitParameter pluginid="TelnetPlugin" parameterId="passprompt" parameterProperty="mustInput" propertyValue="FALSE"/>
        <ChangePluginInitParameter pluginid="TelnetPlugin" parameterId="opprompt" parameterProperty="mustInput" propertyValue="FALSE"/>
    </GlobalMetricSetting>
    <PluginClassAliasList>
        <PluginClassAlias id="defaultProcessor" class="com.mainsteam.stm.plugin.common.DefaultResultSetProcessor"/>
        <PluginClassAlias id="defaultConverter" class="com.mainsteam.stm.plugin.common.DefaultResultSetConverter"/>
        <PluginClassAlias id="selectProcessor" class="com.mainsteam.stm.plugin.common.SelectResultSetProcessor"/>
        <PluginClassAlias id="columnPasteProcessor" class="com.mainsteam.stm.plugin.common.ColumnPasteProcessor"/>
        <PluginClassAlias id="RegularFilter" class="com.mainsteam.stm.plugin.common.RegularFilter"/>
        <PluginClassAlias id="subInstConverter" class="com.mainsteam.stm.plugin.common.SubInstResultSetConverter"/>
        <PluginClassAlias id="availableConverter" class="com.mainsteam.stm.plugin.common.AvailableConverter"/>
        <PluginClassAlias id="tableConverter" class="com.mainsteam.stm.plugin.common.TableResultSetConverter"/>
        <PluginClassAlias id="translateProcessor" class="com.mainsteam.stm.plugin.common.TranslateResultSetProcessor"/>
        <PluginClassAlias id="ChangeRateProcessor" class="com.mainsteam.stm.plugin.common.ChangeRateProcessor"/>
        <PluginClassAlias id="processConverter" class="com.mainsteam.stm.plugin.common.ProcessResultSetConverter"/>
        <PluginClassAlias id="FormatProcessor" class="com.mainsteam.stm.plugin.common.FormatProcessor"/>
        <PluginClassAlias id="memRateProcessor" class="com.mainsteam.stm.plugin.common.MemRateProcessor"/>
   		<PluginClassAlias id="RowFilterByInstPropertyProcessor" class="com.mainsteam.stm.plugin.common.RowFilterByInstPropertyProcessor"/>
    </PluginClassAliasList>
    <MetricPlugin metricid="Name" collectType="" pluginid="MongodbPlugin">
        <PluginResultMetaInfo columns=""/>
        <PluginParameter type="ArrayType">
            <Parameter type="" key="SHELL" value="serverStatus"/>
            <Parameter type="" key="PARAMETER" value="host"/>
        </PluginParameter>
    </MetricPlugin>
    <MetricPlugin metricid="Version" collectType="" pluginid="MongodbPlugin">
        <PluginResultMetaInfo columns=""/>
        <PluginParameter type="ArrayType">
            <Parameter type="" key="SHELL" value="serverStatus"/>
            <Parameter type="" key="PARAMETER" value="version"/>
        </PluginParameter>
    </MetricPlugin>
    <MetricPlugin metricid="availability" collectType="" pluginid="MongodbPlugin">
        <PluginResultMetaInfo columns="column1"/>
        <PluginParameter type="ArrayType">
            <Parameter type="" key="SHELL" value="serverStatus"/>
            <Parameter type="" key="PARAMETER" value="ok"/>
        </PluginParameter>
        <PluginDataHandlers>
            <PluginDataHandler classKey="translateProcessor">
                <Parameter type="" key="" value="1.0,1,1;0"/>
            </PluginDataHandler>
            <PluginDataHandler classKey="availableConverter"/>
        </PluginDataHandlers>
    </MetricPlugin>
    <MetricPlugin metricid="cpuRate" collectType="SSH" pluginid="SshPlugin">
        <PluginResultMetaInfo columns="cpuRate"/>
        <PluginParameter type="ArrayType">
            <Parameter type="" key="Linux" value="LANG=en_US.utf8;top -b -n 3 -d 2 | grep -i &quot;cpu(s)&quot; | tail -n+3 | awk -F , '{if($4~/id/){printf (&quot;%0.2f&quot;,100-substr($4,1,length($4)-3));}}'"/>
            <Parameter type="" key="FreeBSD" value="setenv LANG en_US.UTF-8;vmstat 1 2 | awk 'BEGIN{id_flag=0;idl=0;}NR&gt;1{if($0~/id/){for(i=1;i&lt;=NF;i++){if($i~/id/)id_flag=i;}}idl=$id_flag;}END{printf &quot;%.2f&quot;, 100.00-idl}'"/>
            <Parameter type="" key="UnixWare" value="LANG=en_US.UTF-8;sar -u 1 2| awk 'BEGIN{idle=0;idloff=0;}{if($0~/idle/){for(i=1;i&lt;=NF;i++){if($i~/idle/)idloff=i;}}else if(NF&gt;1){idle=$idloff;}}END{syscpuload=100.00-idle;printf &quot;%.2f&quot;, syscpuload}'"/>
            <Parameter type="" key="SunOS" value="vmstat 1 2 | awk 'BEGIN{id_flag=0;idl=0;}NR&gt;1{if($0~/id/){for(i=1;i&lt;=NF;i++){if($i~/id/)id_flag=i;}}idl=$id_flag;}END{printf &quot;%.2f&quot;, 100.00-idl}'"/>
            <Parameter type="" key="AIX" value="vmstat 1 2 | awk 'BEGIN{id_flag=0;idl=0;}NR&gt;1{if($0~/id/){for(i=1;i&lt;=NF;i++){if($i~/id/)id_flag=i;}}idl=$id_flag;}END{printf &quot;%.2f&quot;, 100.00-idl}'"/>
            <Parameter type="" key="SCO_SV" value="sar -u 1 2| awk 'BEGIN{idle=0;idloff=0;}{if($0~/idle/){for(i=1;i&lt;=NF;i++){if($i~/idle/)idloff=i;}}else if(NF&gt;1){idle=$idloff;}}END{syscpuload=100.00-idle;printf &quot;%.2f&quot;, syscpuload}'"/>
            <Parameter type="" key="HP-UX" value="LANG=en_US.utf8;vmstat 1 2 | awk 'BEGIN{id_flag=0;idl=0;}NR&gt;1{if($0~/id/){for(i=1;i&lt;=NF;i++){if($i~/id/)id_flag=i;}}idl=$id_flag;}END{printf &quot;%.2f&quot;, 100.00-idl}'"/>
        </PluginParameter>
    </MetricPlugin>
    <MetricPlugin metricid="memRate" collectType="SSH" pluginid="SshPlugin">
        <PluginResultMetaInfo columns="memRate"/>
        <PluginParameter type="ArrayType">
            <Parameter type="" key="Linux" value="LANG=en_US.utf8;cat /proc/meminfo | egrep '(^MemTotal|^MemFree|^Buffers|^Cached)' | awk '{if(NR==1){total=$2}else{free+=$2}};END {print free}'"/>
            <Parameter type="" key="FreeBSD" value="setenv LANG en_US.UTF-8;vmstat 1 2 | awk 'BEGIN{flag_fre=0;memfree=0;}NR&gt;1{if($0~/fre/){for(i=1;i&lt;=NF;i++){if($i~/fre/)flag_fre=i;}}memfree=$flag_fre;}END{printf &quot;%.0f&quot;, memfree}'"/>
            <Parameter type="" key="UnixWare" value="LANG=en_US.UTF-8;sar -r 1 | awk 'BEGIN{memfree=0}{while(getline &gt;0){memfree=$2;}}END{printf &quot;%.0f&quot;,memfree*4}'"/>
            <Parameter type="" key="SunOS" value="vmstat 1 2 | awk 'BEGIN{flag_fre=0;memfree=0;}NR&gt;1{if($0~/fre/){for(i=1;i&lt;=NF;i++){if($i~/fre/)flag_fre=i;}}memfree=$flag_fre;}END{print memfree}'"/>
            <Parameter type="" key="AIX" value="svmon -G |egrep '(in use|memory)'|awk 'BEGIN{total=0;inused=0;}{if($1~/memory/){total=$2;}else{inused=$3;}}END{printf &quot;%.0f&quot;,(total-inused)*4}'"/>
            <Parameter type="" key="SCO_SV" value="sar -r 1 | awk 'BEGIN{memfree=0}{while(getline &gt;0){memfree=$2;}}END{printf &quot;%.0f&quot;,memfree*4}'"/>
            <Parameter type="" key="HP-UX" value="LANG=en_US.utf8;vmstat 1 2 | awk 'BEGIN{flag_fre=0;memfree=0;}NR&gt;1{if($0~/fre/){for(i=1;i&lt;=NF;i++){if($i~/fre/)flag_fre=i;}}memfree=$flag_fre;}END{printf &quot;%.0f&quot;, memfree*4}'"/>
        </PluginParameter>
        <PluginDataHandlers>
            <PluginDataHandler classKey="selectProcessor">
                <Parameter type="ResourceProperty" key="totalMemSize" value="totalMemSize"/>
                <Parameter type="" key="SELECT" value="SELECT (1-memRate/${totalMemSize})*100 as memRate"/>
            </PluginDataHandler>
        </PluginDataHandlers>
    </MetricPlugin>
    <MetricPlugin metricid="startupTime" collectType="" pluginid="MongodbPlugin">
        <PluginResultMetaInfo columns=""/>
        <PluginParameter type="ArrayType">
            <Parameter type="" key="SHELL" value="serverStatus"/>
            <Parameter type="" key="PARAMETER" value="uptime"/>
        </PluginParameter>
    </MetricPlugin>
    <MetricPlugin metricid="currentSessionCount" collectType="" pluginid="MongodbPlugin">
        <PluginResultMetaInfo columns=""/>
        <PluginParameter type="ArrayType">
            <Parameter type="" key="SHELL" value="serverStatus"/>
            <Parameter type="" key="PARAMETER" value="connections,current"/>
        </PluginParameter>
    </MetricPlugin>
    <MetricPlugin metricid="freeSessionCount" collectType="" pluginid="MongodbPlugin">
        <PluginResultMetaInfo columns=""/>
        <PluginParameter type="ArrayType">
            <Parameter type="" key="SHELL" value="serverStatus"/>
            <Parameter type="" key="PARAMETER" value="connections,available"/>
        </PluginParameter>
    </MetricPlugin>
    <MetricPlugin metricid="cursorTotalCount" collectType="" pluginid="MongodbPlugin">
        <PluginResultMetaInfo columns=""/>
        <PluginParameter type="ArrayType">
            <Parameter type="" key="SHELL" value="serverStatus"/>
            <Parameter type="" key="PARAMETER" value="metrics,cursor,open,total"/>
        </PluginParameter>
    </MetricPlugin>
    <MetricPlugin metricid="cursorTimeoutCount" collectType="" pluginid="MongodbPlugin">
        <PluginResultMetaInfo columns=""/>
        <PluginParameter type="ArrayType">
            <Parameter type="" key="SHELL" value="serverStatus"/>
            <Parameter type="" key="PARAMETER" value="metrics,cursor,timedOut"/>
        </PluginParameter>
    </MetricPlugin>
    <MetricPlugin metricid="pageFaults" collectType="" pluginid="MongodbPlugin">
        <PluginResultMetaInfo columns=""/>
        <PluginParameter type="ArrayType">
            <Parameter type="" key="SHELL" value="serverStatus"/>
            <Parameter type="" key="PARAMETER" value="extra_info,page_faults"/>
        </PluginParameter>
    </MetricPlugin>
    <MetricPlugin metricid="globalLockCreaTime" collectType="" pluginid="MongodbPlugin">
        <PluginResultMetaInfo columns="createTime"/>
        <PluginParameter type="ArrayType">
            <Parameter type="" key="SHELL" value="serverStatus"/>
            <Parameter type="" key="PARAMETER" value="globalLock,totalTime"/>
        </PluginParameter>
        <PluginDataHandlers>
            <PluginDataHandler classKey="selectProcessor">
                <Parameter type="" key="SELECT" value="SELECT (createTime/1000) AS globalLockCreaTime"/>
            </PluginDataHandler>
        </PluginDataHandlers>
    </MetricPlugin>
    <MetricPlugin metricid="globalLockTotalCount" collectType="" pluginid="MongodbPlugin">
        <PluginResultMetaInfo columns=""/>
        <PluginParameter type="ArrayType">
            <Parameter type="" key="SHELL" value="serverStatus"/>
            <Parameter type="" key="PARAMETER" value="globalLock,currentQueue,total"/>
        </PluginParameter>
    </MetricPlugin>
    <MetricPlugin metricid="globalLockWaitCount" collectType="" pluginid="MongodbPlugin">
        <PluginResultMetaInfo columns=""/>
        <PluginParameter type="ArrayType">
            <Parameter type="" key="SHELL" value="serverStatus"/>
            <Parameter type="" key="PARAMETER" value="globalLock,currentQueue,readers"/>
        </PluginParameter>
    </MetricPlugin>
    <MetricPlugin metricid="globalLockWritCount" collectType="" pluginid="MongodbPlugin">
        <PluginResultMetaInfo columns=""/>
        <PluginParameter type="ArrayType">
            <Parameter type="" key="SHELL" value="serverStatus"/>
            <Parameter type="" key="PARAMETER" value="globalLock,currentQueue,writers"/>
        </PluginParameter>
    </MetricPlugin>
    <MetricPlugin metricid="supArchitecture" collectType="" pluginid="MongodbPlugin">
        <PluginResultMetaInfo columns=""/>
        <PluginParameter type="ArrayType">
            <Parameter type="" key="SHELL" value="serverStatus"/>
            <Parameter type="" key="PARAMETER" value="mem,bits"/>
        </PluginParameter>
    </MetricPlugin>
    <MetricPlugin metricid="memoryUsedPhy" collectType="" pluginid="MongodbPlugin">
        <PluginResultMetaInfo columns=""/>
        <PluginParameter type="ArrayType">
            <Parameter type="" key="SHELL" value="serverStatus"/>
            <Parameter type="" key="PARAMETER" value="mem,resident"/>
        </PluginParameter>
    </MetricPlugin>
    <MetricPlugin metricid="memoryUsedVirtual" collectType="" pluginid="MongodbPlugin">
        <PluginResultMetaInfo columns=""/>
        <PluginParameter type="ArrayType">
            <Parameter type="" key="SHELL" value="serverStatus"/>
            <Parameter type="" key="PARAMETER" value="mem,virtual"/>
        </PluginParameter>
    </MetricPlugin>
    <MetricPlugin metricid="totalMemSize" collectType="SSH" pluginid="SshPlugin">
        <PluginResultMetaInfo columns="totalMemSize"/>
        <PluginParameter type="ArrayType">
            <Parameter type="" key="Linux" value="LANG=en_US.utf8;cat /proc/meminfo |grep -i MemTotal |awk '{printf(&quot;%d\n&quot;,$2)}'"/>
            <Parameter type="" key="FreeBSD" value="setenv LANG en_US.UTF-8;cat /var/run/dmesg.boot | grep -i &quot;real memory&quot; | awk '{printf &quot;%d&quot;,$4/1024}'"/>
            <Parameter type="" key="UnixWare" value="LANG=en_US.UTF-8;memsize|awk '{printf &quot;%d&quot;,$1/1024}'"/>
            <Parameter type="" key="SunOS" value="/usr/sbin/prtconf|awk '/^Memory [Ss]ize/{print $3*1024}'"/>
            <Parameter type="" key="AIX" value="/usr/sbin/prtconf -m 2&gt;/dev/null| awk '{printf &quot;%d&quot;,$3*1024}'"/>
            <Parameter type="" key="SCO_SV" value="memsize|awk '{printf &quot;%d&quot;,$1/1024}'"/>
            <Parameter type="" key="HP-UX" value="LANG=en_US.utf8;grep Physical /var/adm/syslog/syslog.log 2&gt;/dev/null |awk 'BEGIN{pmemsize=0;}{for(i=1;i&lt;=NF;i++){if($i~/Physical:/){pmemsize=$(i+1)}}}END{if(pmemsize==0)exit 1;printf pmemsize}'"/>
        </PluginParameter>
    </MetricPlugin>
    <MetricPlugin metricid="appMemRate" collectType="" pluginid="MongodbPlugin">
        <PluginResultMetaInfo columns="phyMemory"/>
        <PluginParameter type="ArrayType">
            <Parameter type="" key="SHELL" value="serverStatus"/>
            <Parameter type="" key="PARAMETER" value="mem,resident"/>
        </PluginParameter>
        <PluginDataHandlers>
            <PluginDataHandler classKey="FormatProcessor">
                <Parameter type="" key="" value="TO_HUNDRED"/>
            </PluginDataHandler>
            <PluginDataHandler classKey="selectProcessor">
            	<Parameter type="ResourceProperty" key="totalMemSize" value="totalMemSize"/>
                <Parameter type="" key="SELECT" value="SELECT 100*phyMemory*1024/${totalMemSize} AS dbPhyMemRate"/>
            </PluginDataHandler>
        </PluginDataHandlers>
    </MetricPlugin>
    <MetricPlugin metricid="currentOpenFiles" collectType="" pluginid="MongodbPlugin">
        <PluginResultMetaInfo columns=""/>
        <PluginParameter type="ArrayType">
            <Parameter type="" key="SHELL" value="serverStatus"/>
            <Parameter type="" key="PARAMETER" value="wiredTiger,connection"/>
        </PluginParameter>
        <PluginDataHandlers>
            <PluginDataHandler classKey="RegularFilter">
                <Parameter type="" key="REGULAR" value="files currently open&quot;\s*:\s*(\d+)"/>
            </PluginDataHandler>
        </PluginDataHandlers>
    </MetricPlugin>
    <MetricPlugin metricid="bytesIn" collectType="" pluginid="MongodbPlugin">
        <PluginResultMetaInfo columns=""/>
        <PluginParameter type="ArrayType">
            <Parameter type="" key="SHELL" value="serverStatus"/>
            <Parameter type="" key="PARAMETER" value="network,bytesIn"/>
        </PluginParameter>
    </MetricPlugin>
    <MetricPlugin metricid="bytesOut" collectType="" pluginid="MongodbPlugin">
        <PluginResultMetaInfo columns=""/>
        <PluginParameter type="ArrayType">
            <Parameter type="" key="SHELL" value="serverStatus"/>
            <Parameter type="" key="PARAMETER" value="network,bytesOut"/>
        </PluginParameter>
    </MetricPlugin>
    <MetricPlugin metricid="numRequests" collectType="" pluginid="MongodbPlugin">
        <PluginResultMetaInfo columns=""/>
        <PluginParameter type="ArrayType">
            <Parameter type="" key="SHELL" value="serverStatus"/>
            <Parameter type="" key="PARAMETER" value="network,numRequests"/>
        </PluginParameter>
    </MetricPlugin>
    <MetricPlugin metricid="regularAsserts" collectType="" pluginid="MongodbPlugin">
        <PluginResultMetaInfo columns=""/>
        <PluginParameter type="ArrayType">
            <Parameter type="" key="SHELL" value="serverStatus"/>
            <Parameter type="" key="PARAMETER" value="asserts,regular"/>
        </PluginParameter>
    </MetricPlugin>
    <MetricPlugin metricid="warnAsserts" collectType="" pluginid="MongodbPlugin">
        <PluginResultMetaInfo columns=""/>
        <PluginParameter type="ArrayType">
            <Parameter type="" key="SHELL" value="serverStatus"/>
            <Parameter type="" key="PARAMETER" value="asserts,warning"/>
        </PluginParameter>
    </MetricPlugin>
    <MetricPlugin metricid="msgAsserts" collectType="" pluginid="MongodbPlugin">
        <PluginResultMetaInfo columns=""/>
        <PluginParameter type="ArrayType">
            <Parameter type="" key="SHELL" value="serverStatus"/>
            <Parameter type="" key="PARAMETER" value="asserts,msg"/>
        </PluginParameter>
    </MetricPlugin>
    <MetricPlugin metricid="userAsserts" collectType="" pluginid="MongodbPlugin">
        <PluginResultMetaInfo columns=""/>
        <PluginParameter type="ArrayType">
            <Parameter type="" key="SHELL" value="serverStatus"/>
            <Parameter type="" key="PARAMETER" value="asserts,user"/>
        </PluginParameter>
    </MetricPlugin>
    <MetricPlugin metricid="appCpuRate" collectType="SSH" pluginid="SshPlugin">
        <PluginResultMetaInfo columns="appCpuRate"/>
        <PluginParameter type="ArrayType">
            <Parameter type="" key="Linux" value="LANG=en_US.utf8;top -b -n 1|grep mongod|awk '{print $10}'"/>
        </PluginParameter>
        <PluginDataHandlers>
            <PluginDataHandler classKey="RegularFilter">
                <Parameter type="" key="REGULAR" value="(\d+\.{0,1}\d*)"/>
            </PluginDataHandler>
        </PluginDataHandlers>
    </MetricPlugin>
</MetricPlugins>
