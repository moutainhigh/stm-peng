USE ntas;
-- 执行前必须查看数据库里的触发器TR_CONF_INTERFACE的definer是否有问题，（能删除CONF_INTERFACE表里的任何一条数据，就没有问题）

-- 查看数据库所有触发器
-- show triggers from oc4 where definer = 'ntas@%';
-- 修改示图、存储过程、触发器等定义着(本地测试和查看都无效)
-- update mysql.proc set definer='root' where name='ntas@%' and db='oc4';
-- 修改示图、存储过程、触发器等定义着（本地测试无效）
-- update information_schema.triggers set definer = 'root@%';

-- 删除触发器，重新创建
-- drop trigger if exists TR_CONF_INTERFACE;
-- create trigger TR_CONF_INTERFACE before delete on CONF_INTERFACE for each row INSERT INTO CONF_INTERFACE_SHOW SELECT ID,DEVICE_ID,`NAME`,NOW() FROM CONF_INTERFACE where id=old.id;

ALTER TABLE CONF_DEVICE ADD COLUMN RESOURCE_ID INT;
ALTER TABLE CONF_DEVICE ADD COLUMN TYPE VARCHAR(255);
ALTER TABLE CONF_INTERFACE ADD COLUMN RESOURCE_INTERFACE_ID INT;
ALTER TABLE CONF_IP_GROUP ADD COLUMN IPS TEXT;
ALTER TABLE CONF_APPLICATION_GROUP ADD COLUMN PORTS TEXT;
ALTER TABLE CONF_APPLICATION_GROUP ADD COLUMN IPS TEXT;
ALTER TABLE CONF_APPLICATION_GROUP ADD COLUMN PROTOCOL_ID VARCHAR(255);

INSERT CONF_APPLICATION_GROUP(PROTOCOL_ID,NAME,PORTS,IPS) SELECT PROTOCOL_ID,NAME,CONCAT(START_PORT,'-',END_PORT),NULL FROM CONF_APPLICATION WHERE START_IP_ADDR = '' AND END_IP_ADDR = '';
INSERT CONF_APPLICATION_GROUP_MAP(APP_GROUP_ID,APP_ID) SELECT G.ID GID,A.ID AID FROM CONF_APPLICATION_GROUP G LEFT JOIN CONF_APPLICATION A ON G.NAME = A.NAME AND G.PROTOCOL_ID = A.PROTOCOL_ID WHERE A.ID IS NOT NULL;

DROP TABLE IF EXISTS CONF_INTERFACE_GROUP_NETFLOW;
CREATE TABLE CONF_INTERFACE_GROUP_NETFLOW(
	ID INT PRIMARY KEY AUTO_INCREMENT,
	NAME VARCHAR(255),
	CONF_INTERFACE_IDS TEXT,
	DESCRIPTION TEXT,
	CREATE_DATE TIMESTAMP DEFAULT NOW()
);

DROP TABLE IF EXISTS CONF_DEVICE_GROUP_NETFLOW;
CREATE TABLE CONF_DEVICE_GROUP_NETFLOW(
	ID INT PRIMARY KEY AUTO_INCREMENT,
	NAME VARCHAR(255),
	CONF_DEVICE_IDS TEXT,
	DESCRIPTION TEXT,
	CREATE_DATE TIMESTAMP DEFAULT NOW()
);

DROP TABLE IF EXISTS CONF_IP_GROUP_AID;
CREATE TABLE CONF_IP_GROUP_AID(
	CONF_IP_GROUP_ID INT NOT NULL,
	CREATE_DATE TIMESTAMP DEFAULT NOW()
);

DROP TABLE IF EXISTS CONF_LICENSE;
CREATE TABLE CONF_LICENSE(
	ID INT PRIMARY KEY,
	IP VARCHAR(255),
	PORT INT
);
INSERT CONF_LICENSE(ID,IP,PORT) VALUE(1,NULL,NULL);